<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Lurgle.Transfer</name>
    </assembly>
    <members>
        <member name="T:Lurgle.Transfer.Classes.CompressResult">
            <summary>
                Compression result
            </summary>
        </member>
        <member name="M:Lurgle.Transfer.Classes.CompressResult.#ctor(Lurgle.Transfer.Enums.CompressType)">
            <summary>
                Compression result
            </summary>
            <param name="compressType"></param>
        </member>
        <member name="P:Lurgle.Transfer.Classes.CompressResult.Status">
            <summary>
                Compression status
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.CompressResult.Type">
            <summary>
                Compression type
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.CompressResult.SourceFiles">
            <summary>
                Source files
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.CompressResult.DestFiles">
            <summary>
                Destination files
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.CompressResult.LastFile">
            <summary>
                Last file seen
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.CompressResult.ErrorDetails">
            <summary>
                Exception details
            </summary>
        </member>
        <member name="T:Lurgle.Transfer.Classes.FileTransfer">
            <summary>
                SFTP/FTP instance
            </summary>
        </member>
        <member name="M:Lurgle.Transfer.Classes.FileTransfer.#ctor(Lurgle.Transfer.Classes.TransferDestination)">
            <summary>
                SFTP/FTP instance
            </summary>
            <param name="config"></param>
        </member>
        <member name="P:Lurgle.Transfer.Classes.FileTransfer.TransferConfig">
            <summary>
                Transfer Configuration
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.FileTransfer.SftpClient">
            <summary>
                SFTP Client
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.FileTransfer.UseCert">
            <summary>
                Use a certificate for authentication
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.FileTransfer.Destination">
            <summary>
                Destination
            </summary>
        </member>
        <member name="M:Lurgle.Transfer.Classes.FileTransfer.Connect">
            <summary>
                Connect to the configured server
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lurgle.Transfer.Classes.FileTransfer.Disconnect">
            <summary>
                Disconnect from the configured SFTP server
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lurgle.Transfer.Classes.FileTransfer.ListFiles(System.String,System.Boolean)">
            <summary>
                List remote files
            </summary>
            <param name="remotePath"></param>
            <param name="listFolders"></param>
            <returns></returns>
        </member>
        <member name="M:Lurgle.Transfer.Classes.FileTransfer.DownloadFiles(System.String,System.String,System.String)">
            <summary>
                Download files via FTP/SFTP
            </summary>
            <param name="fileName"></param>
            <param name="downloadPath"></param>
            <param name="destPath"></param>
            <returns></returns>
        </member>
        <member name="M:Lurgle.Transfer.Classes.FileTransfer.SendFiles(System.Boolean,System.Boolean)">
            <summary>
                Send all files from the destination or global source path
            </summary>
            <param name="doRetries"></param>
            <param name="overWrite"></param>
            <returns></returns>
        </member>
        <member name="M:Lurgle.Transfer.Classes.FileTransfer.SendFiles(System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean)">
            <summary>
                Transfer a list of files using a list of string paths
            </summary>
            <param name="fileList"></param>
            <param name="doRetries"></param>
            <param name="overWrite"></param>
            <returns></returns>
        </member>
        <member name="M:Lurgle.Transfer.Classes.FileTransfer.SendFiles(System.Collections.Generic.List{Lurgle.Transfer.Classes.TransferInfo},System.Boolean,System.Boolean)">
            <summary>
                Transfer a list of files using a list of TransferInfo
            </summary>
            <param name="files"></param>
            <param name="doRetries"></param>
            <param name="overWrite"></param>
            <returns></returns>
        </member>
        <member name="M:Lurgle.Transfer.Classes.FileTransfer.SendFiles(System.String,System.String,System.Boolean)">
            <summary>
                Send file via FTP/SFTP
            </summary>
            <param name="destFile"></param>
            <param name="localPath"></param>
            <param name="overWrite"></param>
            <returns></returns>
        </member>
        <member name="T:Lurgle.Transfer.Classes.TransferConfig">
            <summary>
                Configuration
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Classes.TransferConfig.ArchiveDaysDefault">
            <summary>
                Default value for ArchiveDays
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Classes.TransferConfig.ArchiveDaysMin">
            <summary>
                Minimum value for ArchiveDays
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Classes.TransferConfig.ArchiveDaysMax">
            <summary>
                Maximum value for Archive Days
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Classes.TransferConfig.DefaultSftpPort">
            <summary>
                Default port
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Classes.TransferConfig.DefaultProxyPort">
            <summary>
                Default proxy port
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Classes.TransferConfig.DefaultFtpBufferSize">
            <summary>
                Default buffer size
            </summary>
        </member>
        <member name="M:Lurgle.Transfer.Classes.TransferConfig.#ctor(Lurgle.Transfer.Classes.TransferConfig,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,Lurgle.Transfer.Classes.TransferDestination})">
            <summary>
                Constructor that permits passing a config and optional overrides of any property
            </summary>
            <param name="config"></param>
            <param name="appName"></param>
            <param name="appVersion"></param>
            <param name="sourcePath"></param>
            <param name="destPath"></param>
            <param name="doArchive"></param>
            <param name="archivePath"></param>
            <param name="archiveDays"></param>
            <param name="transferDestinations"></param>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferConfig.AppName">
            <summary>
                App name
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferConfig.AppVersion">
            <summary>
                App version will be determined from the binary version, but can be overriden
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferConfig.SourcePath">
            <summary>
                Source path
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferConfig.DestPath">
            <summary>
                Destination path
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferConfig.DoArchive">
            <summary>
                Do archival
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferConfig.ArchivePath">
            <summary>
                Archive path
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferConfig.ArchiveDays">
            <summary>
                Days to retain files in archive
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferConfig.TransferDestinations">
            <summary>
                Transfer destinations
            </summary>
        </member>
        <member name="M:Lurgle.Transfer.Classes.TransferConfig.GetConfig(Lurgle.Transfer.Classes.TransferConfig)">
            <summary>
                Load the currently configured config file
            </summary>
        </member>
        <member name="M:Lurgle.Transfer.Classes.TransferConfig.GetBool(System.Object)">
            <summary>
                Convert the supplied <see cref="T:System.Object" /> to a <see cref="T:System.Boolean" />
                <para />
                This will filter out nulls that could otherwise cause exceptions
            </summary>
            <param name="sourceObject">An object that can be converted to a bool</param>
            <returns></returns>
        </member>
        <member name="M:Lurgle.Transfer.Classes.TransferConfig.GetInt(System.Object)">
            <summary>
                Convert the supplied <see cref="T:System.Object" /> to an <see cref="T:System.Int32" />
                <para />
                This will filter out nulls that could otherwise cause exceptions
            </summary>
            <param name="sourceObject">An object that can be converted to an int</param>
            <returns></returns>
        </member>
        <member name="M:Lurgle.Transfer.Classes.TransferConfig.GetDestinations">
            <summary>
                Parse a comma-delimited TransferDestinations <see cref="T:System.String" /> into a list of destination configs
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lurgle.Transfer.Classes.TransferConfig.GetFtpAuth(System.String)">
            <summary>
                Return an <see cref="T:Lurgle.Transfer.Enums.TransferAuth" /> value for the specified destination
            </summary>
            <param name="destination">Retrieve the config for this destination</param>
            <returns></returns>
        </member>
        <member name="M:Lurgle.Transfer.Classes.TransferConfig.GetCompressType(System.String)">
            <summary>
                Parse the configured compresstype <see cref="T:System.String" /> into a <see cref="T:Lurgle.Transfer.Enums.CompressType" /> value
            </summary>
            <param name="configValue">Setting string</param>
            <returns></returns>
        </member>
        <member name="M:Lurgle.Transfer.Classes.TransferConfig.GetTransferType(System.String)">
            <summary>
                Parse the configured transfertype <see cref="T:System.String" /> into a <see cref="T:Lurgle.Transfer.Enums.TransferType" /> value
            </summary>
            <param name="destination">Setting string</param>
            <returns></returns>
        </member>
        <member name="M:Lurgle.Transfer.Classes.TransferConfig.GetTransferMode(System.String)">
            <summary>
                Parse the configured TransferMode <see cref="T:System.String" /> into a <see cref="T:Lurgle.Transfer.Enums.TransferMode" /> value
            </summary>
            <param name="destination">Setting string</param>
            <returns></returns>
        </member>
        <member name="M:Lurgle.Transfer.Classes.TransferConfig.GetMailBool(System.String)">
            <summary>
                Retrieves mailIfError or mailIfSuccess .. if not present in config, returns true
            </summary>
            <param name="mailConfig"></param>
            <returns></returns>
        </member>
        <member name="M:Lurgle.Transfer.Classes.TransferConfig.GetTransferDestination(System.String)">
            <summary>
                Return an <see cref="T:Lurgle.Transfer.Classes.TransferDestination" /> value for the specified destination
            </summary>
            <param name="destination">Retrieve the config for this destination</param>
            <returns></returns>
        </member>
        <member name="T:Lurgle.Transfer.Classes.TransferDestination">
            <summary>
                Transfer configuration class
            </summary>
        </member>
        <member name="M:Lurgle.Transfer.Classes.TransferDestination.#ctor(Lurgle.Transfer.Classes.TransferDestination,System.String,System.Nullable{Lurgle.Transfer.Enums.TransferType},System.Nullable{Lurgle.Transfer.Enums.TransferMode},System.String,System.Nullable{Lurgle.Transfer.Enums.TransferAuth},System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{Lurgle.Transfer.Enums.CompressType},System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary>
                Constructor that permits passing a TransferDestination config and optional overrides of any property
            </summary>
            <param name="config"></param>
            <param name="name"></param>
            <param name="transferType"></param>
            <param name="transferMode"></param>
            <param name="destination"></param>
            <param name="authMode"></param>
            <param name="certPath"></param>
            <param name="bufferSize"></param>
            <param name="server"></param>
            <param name="port"></param>
            <param name="usePassive"></param>
            <param name="remotePath"></param>
            <param name="sourcePath"></param>
            <param name="destPath"></param>
            <param name="doArchive"></param>
            <param name="archivePath"></param>
            <param name="archiveDays"></param>
            <param name="userName"></param>
            <param name="password"></param>
            <param name="retryCount"></param>
            <param name="retryDelay"></param>
            <param name="retryTest"></param>
            <param name="retryFailAll"></param>
            <param name="retryFailConnect"></param>
            <param name="useProxy"></param>
            <param name="proxyType"></param>
            <param name="proxyServer"></param>
            <param name="proxyPort"></param>
            <param name="proxyUser"></param>
            <param name="proxyPassword"></param>
            <param name="compressType"></param>
            <param name="zipPrefix"></param>
            <param name="mailTo"></param>
            <param name="mailToError"></param>
            <param name="mailIfError"></param>
            <param name="mailIfSuccess"></param>
            <param name="downloadDays"></param>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferDestination.TransferType">
            <summary>
                Type of transfer
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferDestination.TransferMode">
            <summary>
                Transfer mode (SFTP or FTP)
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferDestination.Destination">
            <summary>
                Destination
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferDestination.AuthMode">
            <summary>
                Authentication mode
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferDestination.Name">
            <summary>
                Transfer name
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferDestination.BufferSize">
            <summary>
                Buffer size
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferDestination.Server">
            <summary>
                SFTP/FTP server
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferDestination.Port">
            <summary>
                SFTP/FTP TCP port
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferDestination.UsePassive">
            <summary>
                For FTP, use Passive mode
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferDestination.RemotePath">
            <summary>
                Remote path
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferDestination.SourcePath">
            <summary>
                Source path for uploads
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferDestination.DestPath">
            <summary>
                Destination path to move files after transfer
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferDestination.DoArchive">
            <summary>
                Do archival
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferDestination.ArchivePath">
            <summary>
                Archive path
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferDestination.ArchiveDays">
            <summary>
                Days to retain files in archive
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferDestination.UserName">
            <summary>
                Username
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferDestination.Password">
            <summary>
                Password
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferDestination.CertPath">
            <summary>
                Certificate file path for authentication
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferDestination.RetryCount">
            <summary>
                Number of times to retry a file transfer before exiting with error
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferDestination.RetryDelay">
            <summary>
                Time in seconds to wait before retry
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferDestination.RetryTest">
            <summary>
                Retry test mode - by default, first attempt will automatically be flagged as a failure
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferDestination.RetryFailAll">
            <summary>
                If RetryTest is set, fail all retries
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferDestination.RetryFailConnect">
            <summary>
                If RetryTest is set, fail all connection attempts
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferDestination.UseProxy">
            <summary>
                Use proxy server
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferDestination.ProxyType">
            <summary>
                Proxy type
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferDestination.ProxyServer">
            <summary>
                Proxy server
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferDestination.ProxyPort">
            <summary>
                Proxy server TCP port
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferDestination.ProxyUser">
            <summary>
                Proxy username
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferDestination.ProxyPassword">
            <summary>
                Proxy password
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferDestination.CompressType">
            <summary>
                Compression type
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferDestination.ZipPrefix">
            <summary>
                Prefix for ZIP file
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferDestination.MailTo">
            <summary>
                Email address for notifications (Success, and Error if <see cref="P:Lurgle.Transfer.Classes.TransferDestination.MailToError" /> is not configured)
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferDestination.MailToError">
            <summary>
                Email address for error notifications
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferDestination.MailIfError">
            <summary>
                Send email notifications on error
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferDestination.MailIfSuccess">
            <summary>
                Send email notifications on success
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferDestination.DownloadDays">
            <summary>
                Maximum age of files to download
            </summary>
        </member>
        <member name="T:Lurgle.Transfer.Classes.TransferInfo">
            <summary>
                File attributes
            </summary>
        </member>
        <member name="M:Lurgle.Transfer.Classes.TransferInfo.#ctor(System.String,System.DateTime,System.DateTime,System.Int64)">
            <summary>
                File attributes
            </summary>
            <param name="file"></param>
            <param name="accessDate"></param>
            <param name="modifyDate"></param>
            <param name="fileSize"></param>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferInfo.FileName">
            <summary>
                File name
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferInfo.SourceFileName">
            <summary>
                Source file name
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferInfo.AccessedDate">
            <summary>
                Last access date
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferInfo.ModifiedDate">
            <summary>
                Last modified date
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferInfo.Size">
            <summary>
                File size
            </summary>
        </member>
        <member name="T:Lurgle.Transfer.Classes.TransferResult">
            <summary>
                SFTP Result
            </summary>
        </member>
        <member name="M:Lurgle.Transfer.Classes.TransferResult.#ctor(System.String,System.Boolean)">
            <summary>
                SFTP Result
            </summary>
            <param name="destination"></param>
            <param name="isCert"></param>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferResult.Status">
            <summary>
                SFTP Status
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferResult.FileSize">
            <summary>
                Remote File Size
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferResult.UseCert">
            <summary>
                Use certificate authentication
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferResult.Destination">
            <summary>
                Destination
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferResult.FileList">
            <summary>
                File list
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Classes.TransferResult.ErrorDetails">
            <summary>
                Exception details
            </summary>
        </member>
        <member name="T:Lurgle.Transfer.Enums.ActionType">
            <summary>
                Enum of all possible actions
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.ActionType.Compression">
            <summary>
                Compression
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.ActionType.Connection">
            <summary>
                Connection
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.ActionType.Upload">
            <summary>
                Upload
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.ActionType.Download">
            <summary>
                Download
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.ActionType.Conversion">
            <summary>
                PDF Conversion
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.ActionType.Initialisation">
            <summary>
                Initialisation
            </summary>
        </member>
        <member name="T:Lurgle.Transfer.Enums.AppendType">
            <summary>
                Append a prefix or suffix
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.AppendType.Prefix">
            <summary>
                Prefix
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.AppendType.Suffix">
            <summary>
                Suffix
            </summary>
        </member>
        <member name="T:Lurgle.Transfer.Enums.CompressStatus">
            <summary>
                Master list of compression statuses
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.CompressStatus.Success">
            <summary>
                Success
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.CompressStatus.Error">
            <summary>
                Error
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.CompressStatus.NotCompressed">
            <summary>
                Not Compressed
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.CompressStatus.PathNotFound">
            <summary>
                Path not found
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.CompressStatus.Unknown">
            <summary>
                Unknown/not specified
            </summary>
        </member>
        <member name="T:Lurgle.Transfer.Enums.CompressType">
            <summary>
                Master list of compression types
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.CompressType.Uncompressed">
            <summary>
                Uncompressed
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.CompressType.Gzip">
            <summary>
                Gzip
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.CompressType.Zip">
            <summary>
                Zip
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.CompressType.ZipPerFile">
            <summary>
                Zip file for each file
            </summary>
        </member>
        <member name="T:Lurgle.Transfer.Enums.EmailTemplate">
            <summary>
                Master list of Email templates
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.EmailTemplate.Error">
            <summary>
                Error template
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.EmailTemplate.Notification">
            <summary>
                Notification template
            </summary>
        </member>
        <member name="T:Lurgle.Transfer.Enums.EmailType">
            <summary>
                Master list of Email types
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.EmailType.Sent">
            <summary>
                File Sent notifications
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.EmailType.Error">
            <summary>
                Error notifications
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.EmailType.Exception">
            <summary>
                Exception notifications
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.EmailType.LogFailed">
            <summary>
                Logging failure notifications
            </summary>
        </member>
        <member name="T:Lurgle.Transfer.Enums.ExitCodes">
            <summary>
                Exit codes
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.ExitCodes.Success">
            <summary>
                Success
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.ExitCodes.UnhandledException">
            <summary>
                Unhandled exception
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.ExitCodes.CompressFailed">
            <summary>
                Compression phase failed
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.ExitCodes.ConnectFailed">
            <summary>
                Connection phase failed
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.ExitCodes.TransferFailed">
            <summary>
                Transfer phase failed
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.ExitCodes.CleanFailed">
            <summary>
                Cleanup phase failed
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.ExitCodes.ArchiveFailed">
            <summary>
                Archive phase failed
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.ExitCodes.UnreachableMailHost">
            <summary>
                Mail host was unreachable
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.ExitCodes.HelpDisplayed">
            <summary>
                SFTP Transfer displayed the Help dialog
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.ExitCodes.ConvertFailed">
            <summary>
                PDF conversion failed
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.ExitCodes.AppException">
            <summary>
                An application exception was intercepted
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.ExitCodes.SourcePathFailure">
            <summary>
                Source path validation failed
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.ExitCodes.DestPathFailure">
            <summary>
                Destination path validation failed
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.ExitCodes.ArchivePathFailure">
            <summary>
                Archive path validation failed
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.ExitCodes.EmailError">
            <summary>
                An email error occurred
            </summary>
        </member>
        <member name="T:Lurgle.Transfer.Enums.FileSelection">
            <summary>
            Select which filename to use from TransferInfo
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.FileSelection.UseFileName">
            <summary>
            Use TransferInfo.FileName
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.FileSelection.UseSourceFileName">
            <summary>
            Use TransferInfo.SourceFileName
            </summary>
        </member>
        <member name="T:Lurgle.Transfer.Enums.FolderResult">
            <summary>
                Result of folder validation
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.FolderResult.FolderExists">
            <summary>
                Folder exists
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.FolderResult.FolderCreated">
            <summary>
                Folder created
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.FolderResult.ErrorCreatingFolder">
            <summary>
                Error creating folder
            </summary>
        </member>
        <member name="T:Lurgle.Transfer.Enums.TransferAuth">
            <summary>
                SFTP authentication types
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.TransferAuth.Password">
            <summary>
                Password authentication
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.TransferAuth.Certificate">
            <summary>
                Certificate authentication
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.TransferAuth.Both">
            <summary>
                Password and Certificate authentication
            </summary>
        </member>
        <member name="T:Lurgle.Transfer.Enums.TransferMode">
            <summary>
                Allows selection of SFTP or FTP
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.TransferMode.Sftp">
            <summary>
                SFTP (SSH)
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.TransferMode.Ftp">
            <summary>
                FTP
            </summary>
        </member>
        <member name="T:Lurgle.Transfer.Enums.TransferStatus">
            <summary>
                Master list of transfer status results
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.TransferStatus.Success">
            <summary>
                Success
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.TransferStatus.Error">
            <summary>
                Error
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.TransferStatus.FileExists">
            <summary>
                File Exists
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.TransferStatus.Unknown">
            <summary>
                Unknown
            </summary>
        </member>
        <member name="T:Lurgle.Transfer.Enums.TransferType">
            <summary>
                Master list of transfer types
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.TransferType.Upload">
            <summary>
                Upload
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Enums.TransferType.Download">
            <summary>
                Download
            </summary>
        </member>
        <member name="T:Lurgle.Transfer.Files">
            <summary>
                Local file handling
            </summary>
        </member>
        <member name="F:Lurgle.Transfer.Files.FolderSuccess">
            <summary>
                Successful folder validation results
            </summary>
        </member>
        <member name="M:Lurgle.Transfer.Files.GetFileName(System.String)">
            <summary>
                Extension of Path.GetFileName for use in RazorLight templates
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Lurgle.Transfer.Files.GetFolder(System.String)">
            <summary>
                Validate a given filePath
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Lurgle.Transfer.Files.GetFileInfo(System.String)">
            <summary>
                Retrieve file attributes
            </summary>
            <param name="sourceFile"></param>
            <returns></returns>
        </member>
        <member name="M:Lurgle.Transfer.Files.GetFileInfo(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Retrieve file attributes
            </summary>
            <param name="sourceFiles"></param>
            <returns></returns>
        </member>
        <member name="M:Lurgle.Transfer.Files.GetFiles(System.String)">
            <summary>
                Retrieve a list of files and attributes from a given path
            </summary>
            <param name="sourcePath"></param>
            <returns></returns>
        </member>
        <member name="M:Lurgle.Transfer.Files.GetFileList(System.Collections.Generic.IEnumerable{Lurgle.Transfer.Classes.TransferInfo})">
            <summary>
                Retrieve a list of files from a given path
            </summary>
            <param name="fileInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Lurgle.Transfer.Files.GetNewName(System.String,Lurgle.Transfer.Enums.AppendType)">
            <summary>
                Add a random number to the beginning or end of a file name
            </summary>
            <param name="filePath">Path to the file</param>
            <param name="appendType"></param>
            <returns></returns>
        </member>
        <member name="M:Lurgle.Transfer.Files.DeleteCompressedFiles(Lurgle.Transfer.Classes.TransferDestination,System.Nullable{Lurgle.Transfer.Enums.CompressType},System.Collections.Generic.IEnumerable{Lurgle.Transfer.Classes.TransferInfo})">
            <summary>
                Delete compressed files that match the compression type
            </summary>
            <param name="destination"></param>
            <param name="compressType"></param>
            <param name="compressedFiles"></param>
            <returns></returns>
        </member>
        <member name="M:Lurgle.Transfer.Files.CompressFiles(Lurgle.Transfer.Classes.TransferDestination,System.Nullable{Lurgle.Transfer.Enums.CompressType},System.Collections.Generic.IEnumerable{Lurgle.Transfer.Classes.TransferInfo},Lurgle.Transfer.Enums.FileSelection,System.String,System.String)">
            <summary>
                Compress files given a configured compression type
            </summary>
            <param name="destination"></param>
            <param name="compressType"></param>
            <param name="sourceFiles"></param>
            <param name="fileSelection"></param>
            <param name="zipFilePath"></param>
            <param name="zipPrefix"></param>
            <returns></returns>
        </member>
        <member name="M:Lurgle.Transfer.Files.CompressGzip(System.Collections.Generic.IEnumerable{Lurgle.Transfer.Classes.TransferInfo},Lurgle.Transfer.Enums.FileSelection)">
            <summary>
                Compress files to Gzip archives
            </summary>
            <param name="sourceFiles"></param>
            <param name="fileSelection"></param>
            <returns></returns>
        </member>
        <member name="M:Lurgle.Transfer.Files.CompressZip(System.Collections.Generic.IEnumerable{Lurgle.Transfer.Classes.TransferInfo},Lurgle.Transfer.Enums.FileSelection,System.String,System.String)">
            <summary>
                Compress files to a ZIP archive
            </summary>
            <param name="sourceFiles"></param>
            <param name="fileSelection"></param>
            <param name="sourcePath"></param>
            <param name="zipPrefix"></param>
            <returns></returns>
        </member>
        <member name="M:Lurgle.Transfer.Files.CompressZipMulti(System.Collections.Generic.IEnumerable{Lurgle.Transfer.Classes.TransferInfo},Lurgle.Transfer.Enums.FileSelection)">
            <summary>
                Compress files to individual ZIP files
            </summary>
            <param name="sourceFiles"></param>
            <param name="fileSelection"></param>
            <returns></returns>
        </member>
        <member name="M:Lurgle.Transfer.Files.ArchiveFiles(Lurgle.Transfer.Classes.TransferDestination,System.String,System.String)">
            <summary>
                Move files to an archive folder
            </summary>
            <param name="destination"></param>
            <param name="path"></param>
            <param name="archivePath"></param>
            <returns></returns>
        </member>
        <member name="M:Lurgle.Transfer.Files.CleanArchivedFiles(Lurgle.Transfer.Classes.TransferDestination,System.String,System.Nullable{System.Int32})">
            <summary>
                Remove archived files after a given number of days
            </summary>
            <param name="destination"></param>
            <param name="archivePath"></param>
            <param name="archiveDays"></param>
            <returns></returns>
        </member>
        <member name="T:Lurgle.Transfer.Transfers">
            <summary>
                Common functions
            </summary>
        </member>
        <member name="P:Lurgle.Transfer.Transfers.Config">
            <summary>
                Current Lurgle.Transfer configuration
            </summary>
        </member>
        <member name="M:Lurgle.Transfer.Transfers.SetConfig(Lurgle.Transfer.Classes.TransferConfig)">
            <summary>
                Set the logging config. This will only set/update the config if there is no LogWriter currently set.
            </summary>
        </member>
        <member name="M:Lurgle.Transfer.Transfers.Init">
            <summary>
                Initialisation transfer config
            </summary>
        </member>
        <member name="M:Lurgle.Transfer.Transfers.GetRandomNumber">
            <summary>
                returns random number
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
